# SagraFacile Environment Configuration Example
# Copy this file to .env and fill in your actual values.
# Do NOT commit the .env file to version control if it contains sensitive secrets.

# PostgreSQL Database Settings
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changethispassword # Please use a strong, unique password
POSTGRES_DB=sagrafacile
# POSTGRES_PORT=5432 # Optional: Only change if you need to map to a different host port

# Backend (.NET API) Settings
# JWT (JSON Web Token) Configuration - IMPORTANT: Use strong, random strings for secrets
JWT_SECRET=replace_this_with_a_very_long_and_random_string_for_jwt_secret
JWT_ISSUER=SagraFacile
JWT_AUDIENCE=SagraFacileApp

# Initial Admin User (Optional - uncomment and set if you want an admin created on first run)
# INITIAL_ADMIN_EMAIL=admin@example.com
# INITIAL_ADMIN_PASSWORD=supersecurepassword123

# Add any other backend-specific environment variables here, for example:
# THIRD_PARTY_API_KEY=your_api_key_here
# FEATURE_FLAG_XYZ=true

# PreOrder Polling Service (SagraPèreOrdini)
# Set to "true" to enable the background service that polls for pre-orders from SagraPèreOrdini.
# Set to "false" to disable it.
ENABLE_PREORDER_POLLING_SERVICE=true


# Frontend (Next.js Webapp) Settings
# NEXT_PUBLIC_API_BASE_URL is set to /api by default in docker compose.yml and handled by Caddy.
# No frontend-specific variables needed here unless your app requires others at runtime via process.env.


# --- Caddy & Domain Settings ---
# Domain name for the application. This will be used by Caddy for Let's Encrypt.
# Example: MY_DOMAIN=pos.my-restaurant-pos.com
MY_DOMAIN=your.domain.com

# Your Cloudflare account email address
CLOUDFLARE_EMAIL=your-email@example.com

# Cloudflare API Token for Let's Encrypt DNS-01 challenge.
# Create this in your Cloudflare dashboard (My Profile -> API Tokens -> Create Token -> Use "Edit zone DNS" template).
# Ensure it has permissions for the specific zone (your domain).
CLOUDFLARE_API_TOKEN=your_cloudflare_api_token_here

# Other global settings
# TIMEZONE=Europe/Rome # Example, if your application needs a specific timezone
